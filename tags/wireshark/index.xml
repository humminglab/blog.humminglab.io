<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Wireshark - Tag - All about IoT</title><link>https://blog.humminglab.io/tags/wireshark/</link><description>Wireshark - Tag - All about IoT</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>info@humminglab.io (HummingLab)</managingEditor><webMaster>info@humminglab.io (HummingLab)</webMaster><lastBuildDate>Wed, 19 Jan 2022 10:00:00 +0900</lastBuildDate><atom:link href="https://blog.humminglab.io/tags/wireshark/" rel="self" type="application/rss+xml"/><item><title>Port Mirroring 기능 지원 저렴한 스위치 - GS108Ev3</title><link>https://blog.humminglab.io/posts/port-mirroring-network-switch-gs108ev3/</link><pubDate>Wed, 19 Jan 2022 10:00:00 +0900</pubDate><author><name>YSLee</name><uri>https://www.humminglab.io</uri><email>info@humminglab.io</email></author><guid>https://blog.humminglab.io/posts/port-mirroring-network-switch-gs108ev3/</guid><description><![CDATA[<p>네트워크 프로토콜을 개발 하다보면 Wireshark 등으로 패킷을 캡쳐하여 분석할 일이 종종 생긴다.
Linux 장치라면 tcpdump나 wireshark을 실행해서 직접 패킷 캡쳐가 가능하지만, 그렇지 않은 경우에는 Network TAP 이나 이더넷 스위치의 port mirroring 기능을 사용하여서 패킷을 캡쳐하여야 한다.
Amazon 등에서 검색해보면 Network Tap 도 $200~300 정도로 비싼 편이고, 포트 미러링와 유사한 기능도 고급 스위치에서만 지원된다.</p>
<p>찾다 보니 Netgear <a href="https://www.netgear.com/business/wired/switches/plus/gs108e/" target="_blank" rel="noopener noreferrer">GS108Ev3</a>(8포트), <a href="https://www.netgear.com/business/wired/switches/plus/gs105ev2/" target="_blank" rel="noopener noreferrer">GS105Ev2</a>(5포트) 가 가격도 5~8만원 정도로 비싸지 않고, 포트 미러링 기능이 지원되어 소개한다.</p>
<p>외관은 금속으로 되어 있어 크기에 비하여 무게가 묵직하게 나간다.</p>]]></description></item><item><title>Wireshark 으로 TLS 캡쳐 및 디코딩 하기</title><link>https://blog.humminglab.io/posts/how-to-capture-tls-with-wireshark/</link><pubDate>Tue, 21 Dec 2021 16:00:00 +0900</pubDate><author><name>YSLee</name><uri>https://www.humminglab.io</uri><email>info@humminglab.io</email></author><guid>https://blog.humminglab.io/posts/how-to-capture-tls-with-wireshark/</guid><description><![CDATA[<p>프로토콜을 개발하거나 검증하려고 할 때 SSL/TLS 암호화 채널로 전송되는 데이타를 디코딩하여 확인이 필요할 때가 있다.
이 글에서는 시험하려는 프로그램의 수정 없이 또는 최소한의 수정으로 디코딩 하는 방법을 설명한다.</p>
<h2 id="개요" class="headerLink">
    <a href="#%ea%b0%9c%ec%9a%94" class="header-mark"></a>개요</h2><p>TLS 채널의 초기 셋업 절차는 크게 보면 다음과 같은 절차로 이루어진다.</p>
<ul>
<li>서버 인증서를 받아서 검증하기</li>
<li>필요하면 클라이언트 인증서를 받아서 검증하기</li>
<li>암호화 방식을 이용하여 대칭키 교환</li>
<li>대칭키를 이용한 암호화된 데이타 송수신</li>
</ul>
<p>패킷을 분석하기에 필요한 사항은 결국은 위 세번째 과정에서 교환한 대칭키(Master Secret)를 얻는 것이다. 다음은 이를 얻을 수 있는 방법 들을 정리한다.</p>]]></description></item></channel></rss>