<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Cryptography, MAC, AE, AEHD, AES-GCM, ChaCha20-Poly1305 - Tag - All about IoT</title><link>https://blog.humminglab.io/tags/cryptography-mac-ae-aehd-aes-gcm-chacha20-poly1305/</link><description>Cryptography, MAC, AE, AEHD, AES-GCM, ChaCha20-Poly1305 - Tag - All about IoT</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>info@humminglab.io (HummingLab)</managingEditor><webMaster>info@humminglab.io (HummingLab)</webMaster><lastBuildDate>Sat, 30 Apr 2022 09:00:00 +0900</lastBuildDate><atom:link href="https://blog.humminglab.io/tags/cryptography-mac-ae-aehd-aes-gcm-chacha20-poly1305/" rel="self" type="application/rss+xml"/><item><title>TLS/암호 알고리즘 쉽게 이해하기(13) - MAC, AE, AEAD</title><link>https://blog.humminglab.io/posts/tls-cryptography-13-mac-aead/</link><pubDate>Sat, 30 Apr 2022 09:00:00 +0900</pubDate><author><name>YSLee</name><uri>https://www.humminglab.io</uri><email>info@humminglab.io</email></author><guid>https://blog.humminglab.io/posts/tls-cryptography-13-mac-aead/</guid><description><![CDATA[<p>지금까지 설명한 암호화 알고리즘을 조합하여 확장을 해보기로 한다.</p>
<p>이 글에서 설명할 내용은 다음과 같다.</p>
<ul>
<li>MAC(Message Authentication Code)</li>
<li>AE(Authenticated Encryption)</li>
<li>AEAD(Authenticated Encryption with Associated Data)</li>
</ul>
<h2 id="mac-message-authentication-code" class="headerLink">
    <a href="#mac-message-authentication-code" class="header-mark"></a>MAC (Message Authentication Code)</h2><p>MAC은 한마디로 정리하면 <a href="https://blog.humminglab.io/posts/tls-cryptography-10-hash/" rel="">Hash</a>에 비밀키를 추가한 버전이라고 볼 수 있다.</p>
<p>키를 사용한다는 것으로 보면 <a href="https://blog.humminglab.io/posts/tls-cryptography-9-dsa/" rel="">DSA</a> 디지털 서명과 비슷한 기능을 수행하지만, 공유키를 사용한다는 것이 다르다.</p>
<p>DSA는 Alice의 공개키를 가진 다수의 사람이 검증을 위한 용도이고, MAC은 키를 공유한 사람 간에 검증을 하기 위한 용도이다. 물론 연산량도 DSA와 비교하여 더 적고 빠르다.</p>]]></description></item></channel></rss>