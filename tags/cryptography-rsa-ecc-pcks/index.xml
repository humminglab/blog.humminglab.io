<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Cryptography, RSA, ECC, PCKS - Tag - All about IoT</title><link>https://blog.humminglab.io/tags/cryptography-rsa-ecc-pcks/</link><description>Cryptography, RSA, ECC, PCKS - Tag - All about IoT</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>info@humminglab.io (HummingLab)</managingEditor><webMaster>info@humminglab.io (HummingLab)</webMaster><lastBuildDate>Mon, 21 Mar 2022 09:00:00 +0900</lastBuildDate><atom:link href="https://blog.humminglab.io/tags/cryptography-rsa-ecc-pcks/" rel="self" type="application/rss+xml"/><item><title>TLS/암호 알고리즘 쉽게 이해하기(8) - RSA</title><link>https://blog.humminglab.io/posts/tls-cryptography-8-rsa/</link><pubDate>Mon, 21 Mar 2022 09:00:00 +0900</pubDate><author><name>YSLee</name><uri>https://www.humminglab.io</uri><email>info@humminglab.io</email></author><guid>https://blog.humminglab.io/posts/tls-cryptography-8-rsa/</guid><description><![CDATA[<p>지난 번에 설명한 <a href="https://blog.humminglab.io/posts/tls-cryptography-6-math/" rel="">이산대수</a>를 이용하면 RSA 의 기본원리도 쉽게 이해할 수 있다.</p>
<p>RSA는 이름에 특별한 의미는 없고, 알고리즘을 발명한 사람들(Ron Rivest, Adi Shamir, Leonard Adleman)의 약자를 따서 만든 것이다.</p>
<p><a href="https://blog.humminglab.io/posts/tls-cryptography-3-block-cipher/" rel="">AES</a>와는 달리 공개키(public key)와 개인키(private key) 두 벌로 구성된 키를 가지고 있는 비대칭키 암호화 알고리즘이다.</p>
<p>가장 일반적인 사용용도는 다음과 같이 Bob 이 Alice에게 암호 데이타 전달하는 방법이다.</p>
<ul>
<li>Alice의 공개키는 공개되어 누구나 알수 있다.</li>
<li>Bob은 Alice의 공개키를 이용하여 암호화 하여 일반 채널로 전달한다.</li>
<li>Alice는 자신의 개인키로 복호화 하여 Bob이 보낸 데이타를 얻을 수 있다.</li>
</ul>
<pre class="mermaid">sequenceDiagram
Participant Alice
Participant Bob
Alice ->> Bob: 공개키(K_pub) 배포
note over Bob: P=본문<br/>E=RSA(K_pub, P)
Bob ->> Alice: 암호화된 데이타(E) 전송
note over Alice: P=RSA(K_pri, E)

</pre>
<p>이 과정에서 암호화된 데이타를 다른 사람이 도청을 하더라도, Alice 의 private key가 없는 이상 복호화 할 방법은 없다.</p>]]></description></item></channel></rss>