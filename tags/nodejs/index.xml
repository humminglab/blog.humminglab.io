<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>NodeJS - Tag - All about IoT</title><link>https://blog.humminglab.io/tags/nodejs/</link><description>NodeJS - Tag - All about IoT</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>info@humminglab.io (HummingLab)</managingEditor><webMaster>info@humminglab.io (HummingLab)</webMaster><lastBuildDate>Mon, 21 Aug 2023 16:00:00 +0900</lastBuildDate><atom:link href="https://blog.humminglab.io/tags/nodejs/" rel="self" type="application/rss+xml"/><item><title>Yocto 에서 NPM 기반의 Javascript 패키지 관리</title><link>https://blog.humminglab.io/posts/yocto-npm-js-recipe/</link><pubDate>Mon, 21 Aug 2023 16:00:00 +0900</pubDate><author><name>YSLee</name><uri>https://www.humminglab.io</uri><email>info@humminglab.io</email></author><guid>https://blog.humminglab.io/posts/yocto-npm-js-recipe/</guid><description><![CDATA[<p><a href="https://blog.humminglab.io/posts/yocto-golang-recipe/" rel="">Yocto에서 Go 프로젝트 관리</a>에 추가하여 JavaScript 기반의 프로그램을 Yocto의 패키지로 관리하는 방법을 정리해 본다.</p>
<p>관련 사항은 Yocto Wiki 의 NPM 기반 패키지 관리 방법에 간략하게 설명되어 있다.</p>
<ul>
<li><a href="https://wiki.yoctoproject.org/wiki/TipsAndTricks/NPM" target="_blank" rel="noopener noreferrer">TipsAndTricks/NPM - Yocto Project</a></li>
</ul>
<p>Javascript 기반의 프로젝트도 Go 언어와 마찬가지로 패키지 관련한 문제가 있지만 이 부분은 어느정도 툴을 이용하여 해결된 상태이다.</p>
<p>임베디드 환경에서 Javascript NPM 를 사용하는 경우를 크게 보면 다음 두 경우가 있을 수 있다.</p>
<ul>
<li>Node.js 기반의 프로젝트</li>
<li>Webpack/React와 같은 static page 생성</li>
</ul>
<p>Node.js와 같은 프로젝트는 빌드 시 <code>nodejs-native</code> 도 필요하지만 target에서 동작하는 <code>nodejs</code>도 필요하다.
하지만 webpack과 같은 경우에는 <code>nodejs-native</code>만 있어서 configure, compile task에서 이를 이용하여 페이지를 생성하면 되고, 별도로 target에 <code>nodejs</code>를 설치할 필요가 없다.</p>]]></description></item></channel></rss>