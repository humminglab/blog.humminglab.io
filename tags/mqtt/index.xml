<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>MQTT - Tag - All about IoT</title><link>https://blog.humminglab.io/tags/mqtt/</link><description>MQTT - Tag - All about IoT</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>info@humminglab.io (HummingLab)</managingEditor><webMaster>info@humminglab.io (HummingLab)</webMaster><lastBuildDate>Fri, 14 Oct 2016 09:00:00 +0900</lastBuildDate><atom:link href="https://blog.humminglab.io/tags/mqtt/" rel="self" type="application/rss+xml"/><item><title>MQTT Protocol</title><link>https://blog.humminglab.io/posts/mqtt-protocol/</link><pubDate>Fri, 14 Oct 2016 09:00:00 +0900</pubDate><author><name>YSLee</name><uri>https://www.humminglab.io</uri><email>info@humminglab.io</email></author><guid>https://blog.humminglab.io/posts/mqtt-protocol/</guid><description><![CDATA[<p><a href="http://mqtt.org/" target="_blank" rel="noopener noreferrer">MQTT</a>(Message Queue Telemetry Transport)는 IOT 기기간의 통신을 위한 프로토콜이다.
MQTT 이외에도 IOT용으로 <a href="http://coap.technology/" target="_blank" rel="noopener noreferrer">CoAP</a>(Constrained Application Protocol), <a href="https://www.amqp.org/" target="_blank" rel="noopener noreferrer">AMQP</a>(Advanced Message Queuing Protocol), <a href="https://xmpp.org/" target="_blank" rel="noopener noreferrer">XMPP</a>(eXtensible Messaging and Presence Protocol), <a href="http://portals.omg.org/dds/" target="_blank" rel="noopener noreferrer">DDS</a>(Data Distribution Service), <a href="https://stomp.github.io/" target="_blank" rel="noopener noreferrer">Stomp</a>(Simple Text Orientated Messaging Protocol) 등의 다양한 프로토콜이 있고, 각각의 프로토콜은 활용 용도에 따라서 장단점을 가지고 있다.</p>
<p>여기에서는 MQTT의 특징에 대해서 정리하기로 한다.</p>
<h2 id="mqtt의-특징" class="headerLink">
    <a href="#mqtt%ec%9d%98-%ed%8a%b9%ec%a7%95" class="header-mark"></a>MQTT의 특징</h2><h3 id="tcp-기반-프로토콜" class="headerLink">
    <a href="#tcp-%ea%b8%b0%eb%b0%98-%ed%94%84%eb%a1%9c%ed%86%a0%ec%bd%9c" class="header-mark"></a>TCP 기반 프로토콜</h3><p>UDP가 아닌 TCP 기반이라 작은 IOT 기기에서는 사용이 어려울 수 있다.
MQTT 프로토콜에서 사용자 인증을 제공한다. 하지만 이를 위한 username, password 필드는 cleartext로 전달되므로 이들 정보와 송수신 데이타를 보호하기 위하여는 별도로 암호화를 하거나 SSL/TLS를  이용하여 암호화 채널을 이용하여야 한다. 결과적으로 public 망에서 운영되는 IOT 기기는 MQTT, TCP, TLS를 지원할 수 있는 OS와 메모리 사양이 되어야 한다.</p>]]></description></item></channel></rss>